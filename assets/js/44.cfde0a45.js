(window.webpackJsonp=window.webpackJsonp||[]).push([[44],{457:function(v,_,e){"use strict";e.r(_);var o=e(2),t=Object(o.a)({},(function(){var v=this,_=v._self._c;return _("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[_("h2",{attrs:{id:"基本概念"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#基本概念"}},[v._v("#")]),v._v(" 基本概念")]),v._v(" "),_("p",[v._v("Java 语言中，基本类型（如 int、double、boolean 等）在运算过程中，会自动拆箱（unboxing）成对应的包装类（如 Integer、Double、Boolean 等），再进行运算。而包装类在运算结束后，又会自动装箱（boxing）回基本类型。")]),v._v(" "),_("h2",{attrs:{id:"自动拆箱"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#自动拆箱"}},[v._v("#")]),v._v(" 自动拆箱")]),v._v(" "),_("p",[v._v("自动拆箱发生在以下情况下：")]),v._v(" "),_("ul",[_("li",[v._v("运算符 "),_("code",[v._v("+")]),v._v("、"),_("code",[v._v("-")]),v._v("、"),_("code",[v._v("*")]),v._v("、"),_("code",[v._v("/")]),v._v("、"),_("code",[v._v("%")]),v._v("、"),_("code",[v._v("==")]),v._v("、"),_("code",[v._v("!=")]),v._v("、"),_("code",[v._v("instanceof")]),v._v("、"),_("code",[v._v("!")]),v._v("、"),_("code",[v._v("&&")]),v._v("、"),_("code",[v._v("||")]),v._v("、"),_("code",[v._v("^")]),v._v("、"),_("code",[v._v("&")]),v._v("、"),_("code",[v._v("|")]),v._v("、"),_("code",[v._v("<<")]),v._v("、"),_("code",[v._v(">>")]),v._v("、"),_("code",[v._v(">>>")]),v._v(" 等。")]),v._v(" "),_("li",[v._v("条件表达式 "),_("code",[v._v("?")]),v._v(" 左边的表达式。")]),v._v(" "),_("li",[v._v("赋值运算符 "),_("code",[v._v("=")]),v._v(" 左边的表达式。")])]),v._v(" "),_("h2",{attrs:{id:"自动装箱"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#自动装箱"}},[v._v("#")]),v._v(" 自动装箱")]),v._v(" "),_("p",[v._v("自动装箱发生在以下情况下：")]),v._v(" "),_("ul",[_("li",[v._v("构造方法调用。")]),v._v(" "),_("li",[v._v("条件表达式 "),_("code",[v._v("?")]),v._v(" 右边的表达式。")]),v._v(" "),_("li",[v._v("赋值运算符 "),_("code",[v._v("=")]),v._v(" 右边的表达式。")])]),v._v(" "),_("h2",{attrs:{id:"注意事项"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#注意事项"}},[v._v("#")]),v._v(" 注意事项")]),v._v(" "),_("ul",[_("li",[v._v("装箱和拆箱操作是自动进行的，不需要显式调用相关方法。")]),v._v(" "),_("li",[v._v("装箱和拆箱操作不会改变原有对象的值，只是创建新的对象。")]),v._v(" "),_("li",[v._v("装箱和拆箱操作不会改变基本类型的值，只是创建包装类对象。")]),v._v(" "),_("li",[v._v("装箱和拆箱操作不会改变对象引用，只是创建新的对象引用。")])])])}),[],!1,null,null,null);_.default=t.exports}}]);