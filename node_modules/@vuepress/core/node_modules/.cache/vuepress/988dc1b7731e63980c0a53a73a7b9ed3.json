{"remainingRequest":"C:\\project\\vue\\node_modules\\babel-loader\\lib\\index.js??ref--3-1!C:\\project\\vue\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??ref--6!C:\\project\\vue\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!C:\\project\\vue\\node_modules\\vue-loader\\lib\\index.js??ref--1-1!C:\\project\\vue\\node_modules\\@vuepress\\markdown-loader\\index.js??ref--1-2!C:\\project\\vue\\docs\\book\\note\\work.md?vue&type=template&id=3a597c82","dependencies":[{"path":"C:\\project\\vue\\docs\\book\\note\\work.md","mtime":1736342411901},{"path":"C:\\project\\vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1724250190979},{"path":"C:\\project\\vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1724250190979},{"path":"C:\\project\\vue\\node_modules\\babel-loader\\lib\\index.js","mtime":1724250191247},{"path":"C:\\project\\vue\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1724250192553},{"path":"C:\\project\\vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1724250190979},{"path":"C:\\project\\vue\\node_modules\\vue-loader\\lib\\index.js","mtime":1724250191896},{"path":"C:\\project\\vue\\node_modules\\@vuepress\\markdown-loader\\index.js","mtime":1724250189974}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}