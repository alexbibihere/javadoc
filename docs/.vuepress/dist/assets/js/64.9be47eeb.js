(window.webpackJsonp=window.webpackJsonp||[]).push([[64],{474:function(e,a,t){"use strict";t.r(a);var s=t(2),n=Object(s.a)({},(function(){var e=this,a=e._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"sql写法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sql写法"}},[e._v("#")]),e._v(" SQL写法")]),e._v(" "),a("h2",{attrs:{id:"日期函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#日期函数"}},[e._v("#")]),e._v(" 日期函数")]),e._v(" "),a("h3",{attrs:{id:"查询2020年8月之前创建的课程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#查询2020年8月之前创建的课程"}},[e._v("#")]),e._v(" 查询2020年8月之前创建的课程：")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("SELECT\nname,Date( created_at) as created_date\nFROM\ncourses\nwhere \ncreated_at <'2020-08-01'\n")])])]),a("h3",{attrs:{id:"统计2020年1月到5月的课程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#统计2020年1月到5月的课程"}},[e._v("#")]),e._v(" 统计2020年1月到5月的课程")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("SELECT\nCOUNT(*) as count\nFROM\ncourses\nWHERE\ncreated_at >= '2020-01-01' AND created_at < '2020-06-01'\n")])])]),a("h3",{attrs:{id:"查询所有课程表的课程名和创建时间的秒数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#查询所有课程表的课程名和创建时间的秒数"}},[e._v("#")]),e._v(" 查询所有课程表的课程名和创建时间的秒数")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("SELECT\nname,\nextract(second from created_at) as created_time_seconds\nFROM\ncourses\n")])])]),a("h3",{attrs:{id:"查询每个部门的平均薪水"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#查询每个部门的平均薪水"}},[e._v("#")]),e._v(" 查询每个部门的平均薪水")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("SELECT\ndepartment,\nAVG(salary) as avg_salary\nFROM\nemployees\nGROUP BY\ndepartment\norder by\navg_salary DESC\n")])])]),a("h3",{attrs:{id:"统计不同教师id的数量"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#统计不同教师id的数量"}},[e._v("#")]),e._v(" 统计不同教师id的数量")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("SELECT\ncount(DISTINCT teacher_id) as teacher_count\nFROM\ncourses\n")])])]),a("h3",{attrs:{id:"查询来自中国的教师名称以及所教课程名称"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#查询来自中国的教师名称以及所教课程名称"}},[e._v("#")]),e._v(" 查询来自中国的教师名称以及所教课程名称")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("SELECT\nc.name as course_name,t.name as teacher_name\nFROM\nteachers t\nleft join\ncourses c\non c.teacher_id = t.id\nWHERE\nt.country='CN'\n")])])]),a("h3",{attrs:{id:"查询教师id不为1或3的课程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#查询教师id不为1或3的课程"}},[e._v("#")]),e._v(" 查询教师id不为1或3的课程")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("SELECT\nname\nFROM\ncourses\nWHERE\nteacher_id NOT IN (1,3)\n")])])]),a("h3",{attrs:{id:"查询为腾讯邮箱且国籍为中国的老师"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#查询为腾讯邮箱且国籍为中国的老师"}},[e._v("#")]),e._v(" 查询为腾讯邮箱且国籍为中国的老师")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("SELECT\n*\nFROM\nteachers\nwhere \nemail like '%@qq.com'\nand\ncountry ='CN'\n")])])]),a("h3",{attrs:{id:"插入xiexun的信息"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#插入xiexun的信息"}},[e._v("#")]),e._v(" 插入xiexun的信息")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("BEGIN;\n\n-- 插入 Xie Xun 的信息 --\n-- Write your SQL Query here --\ninsert into teachers\n(name,age,country)\nvalues('Xie Xun',49,'CN');\n\nCOMMIT;\n")])])]),a("h3",{attrs:{id:"查询制定教师授课的课程信息"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#查询制定教师授课的课程信息"}},[e._v("#")]),e._v(" 查询制定教师授课的课程信息")]),e._v(" "),a("p",[e._v("并将结果集按教师 id 升序排列，如果教师 id 相同，则按照课程创建时间降序排列。")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("SELECT\nname, teacher_id ,created_at\nFROM\ncourses\nWHERE\nteacher_id in (1,2,3)\norder by teacher_id asc,created_at desc\n")])])]),a("h3",{attrs:{id:"找到挂科最多的同学-student-id"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#找到挂科最多的同学-student-id"}},[e._v("#")]),e._v(" 找到挂科最多的同学 student_id")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(" select student_id\n from exams\n where is_pass = 0\n group by student_id\n order by count(student_id) desc\n limit 1;\n")])])]),a("h3",{attrs:{id:"分别查询出课程表的课程创建时间中的日期与时间"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#分别查询出课程表的课程创建时间中的日期与时间"}},[e._v("#")]),e._v(" 分别查询出课程表的课程创建时间中的日期与时间")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("SELECT\nDate(created_at) as created_date, Time(created_at) as created_time\nFROM\ncourses\n")])])]),a("h3",{attrs:{id:"查询课程创建日期按-年-月-日-时-分-秒-显示"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#查询课程创建日期按-年-月-日-时-分-秒-显示"}},[e._v("#")]),e._v(" 查询课程创建日期按 ‘年-月-日 时:分:秒’ 显示")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("SELECT\ndate_format(created_at,'%Y-%m-%d %H:%i:%s')  as DATE_FORMAT\nFROM\ncourses;\n")])])]),a("h3",{attrs:{id:"判断教师是否拥有邮箱"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#判断教师是否拥有邮箱"}},[e._v("#")]),e._v(" 判断教师是否拥有邮箱")]),e._v(" "),a("p",[e._v("isnull 判断是否为空\nifnull 两个参数，为空返回第二个\ncoalesce 多个参数，第一个不为空返回第一个，否则返回最后一个")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("SELECT\nname,email,\nisnull(email) as isnull_email,\nifnull(email,0) as ifnull_email,\ncoalesce(email,0) as coalesce_email\nFROM\nteachers\n")])])]),a("h3",{attrs:{id:"查询20岁以上教师的平均年龄-保留四位小数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#查询20岁以上教师的平均年龄-保留四位小数"}},[e._v("#")]),e._v(" 查询20岁以上教师的平均年龄 保留四位小数")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("SELECT\nround(avg(age),0) as avg_teacher_age\nFROM\nteachers\nWHERE\nage >20\n")])])]),a("h3",{attrs:{id:"修改教师eastern-heretic创建的课程信息"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#修改教师eastern-heretic创建的课程信息"}},[e._v("#")]),e._v(" 修改教师Eastern Heretic创建的课程信息")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("UPDATE\ncourses \nset\nname = 'PHP', student_count = 300\nwhere\nteacher_id =(\n    select id \n    from \n    teachers t\n    where\n    t.name = 'Eastern Heretic'\n);\n")])])]),a("h3",{attrs:{id:"被同一个人至少使用过三次的共享单车"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#被同一个人至少使用过三次的共享单车"}},[e._v("#")]),e._v(" 被同一个人至少使用过三次的共享单车")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(" SELECT\nbike_id,user_id\nFROM\nshared_bicycles\ngroup by bike_id,user_id\nhaving count(bike_id) >=3\n \n")])])]),a("h3",{attrs:{id:"硬币翻面"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#硬币翻面"}},[e._v("#")]),e._v(" 硬币翻面")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("update\ncoins\nset\nside = if(side='p','n','p')\n")])])]),a("h3",{attrs:{id:"超过3名球员所得的分数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#超过3名球员所得的分数"}},[e._v("#")]),e._v(" 超过3名球员所得的分数")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("select score\nfrom scores\ngroup by score\nhaving count(distinct player)>=3\n")])])]),a("h3",{attrs:{id:"查询不同年龄教师的人数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#查询不同年龄教师的人数"}},[e._v("#")]),e._v(" 查询不同年龄教师的人数")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("SELECT\nage,count(age) as count\nFROM\nteachers\nGROUP BY age\norder by age desc\n")])])]),a("h3",{attrs:{id:"增长的疫情感染人数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#增长的疫情感染人数"}},[e._v("#")]),e._v(" 增长的疫情感染人数")]),e._v(" "),a("p",[e._v("查找比前一天日期相比更高的所有日期的id")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("SELECT\nt1.id \nFROM\nnew_cases t1\ninner join\nnew_cases t2\non t1.date= date_add(t2.date,interval 1 day)\nWHERE \nt1.increased_count> t2.increased_count\n\n")])])]),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("select n2.id\nfrom new_cases as n1\njoin new_cases as n2\nwhere DATEDIFF(n2.date, n1.date) = 1 \nand n2.increased_count > n1.increased_count\n")])])]),a("h3",{attrs:{id:"找出从不充值的玩家"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#找出从不充值的玩家"}},[e._v("#")]),e._v(" 找出从不充值的玩家")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("SELECT\nplayer\nFROM\nusers u\nLEFT JOIN\nrecharges r\nON u.id = r.user_id\nWHERE\nu.id not in (SELECT user_id FROM recharges)\n")])])]),a("h3",{attrs:{id:"网课上课情况分析"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#网课上课情况分析"}},[e._v("#")]),e._v(" 网课上课情况分析")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("SELECT\nstudent_id,min(date) as earliest_course_date\nfrom\nonline_class_situations\nwhere\ncourse_number>0\ngroup by student_id\n")])])]),a("h3",{attrs:{id:"查询教师表-teachers-中除了年龄-age-在-20-岁以上-不包括-20-岁-的中国-cn-教师以外所有教师信息"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#查询教师表-teachers-中除了年龄-age-在-20-岁以上-不包括-20-岁-的中国-cn-教师以外所有教师信息"}},[e._v("#")]),e._v(" 查询教师表 teachers 中除了年龄 age 在 20 岁以上 (不包括 20 岁) 的中国 (CN) 教师以外所有教师信息")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("SELECT\n*\nFROM\nteachers\nWHERE\nid not in\n(SELECT id FROM\nteachers WHERE\nage>20 and country='CN')\n")])])]),a("h3",{attrs:{id:"查询不同国家教师的人数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#查询不同国家教师的人数"}},[e._v("#")]),e._v(" 查询不同国家教师的人数")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("select\ncountry,count(country) as teacher_count\nfrom\nteachers\ngroup by country\norder by teahcer_count,country\n")])])]),a("h3",{attrs:{id:"查询字母d-到-o-开的头的课程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#查询字母d-到-o-开的头的课程"}},[e._v("#")]),e._v(" 查询字母D 到 O 开的头的课程")]),e._v(" "),a("p",[e._v("正则取区间")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("select\nname\nfrom\ncourses\nwhere\nname REGEXP '^[D-O]'\n")])])]),a("h3",{attrs:{id:"所有学生都选修的课程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#所有学生都选修的课程"}},[e._v("#")]),e._v(" 所有学生都选修的课程")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("SELECT\ncourse_id\nFROM\ncourses\ngroup by course_id\nhaving count(distinct student_id)=(SELECT count(distinct student_id) FROM courses) （这句是核心，判断当前去重过得学生数是否等于总学生数）\norder by course_id\n")])])]),a("h3",{attrs:{id:"存储过程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#存储过程"}},[e._v("#")]),e._v(" 存储过程")]),e._v(" "),a("p",[e._v("创建一个存储过程，实现按教师 id 返回教师所教授的课程数。")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("create PROCEDURE get_Total_By_teacher_id(IN Teacher INT,OUT total INT)\nBEGIN\n    select count(1) INTO total FROM courses WHERE teacher_id = Teacher;\nEND;\n\nCALL get_Total_By_teacher_id(3,@total);\n\nselect @total;\n")])])]),a("h4",{attrs:{id:"删除重复的姓名"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#删除重复的姓名"}},[e._v("#")]),e._v(" 删除重复的姓名")]),e._v(" "),a("p",[e._v("如果直接select第二个括号的内容会报错，需要在外面在嵌套一个select并为内层结果命名")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("delete from\ncontacts\nwhere id not in \n(\nselect * from (\n select min(id) as id from contacts group by name\n) as t\n)\n")])])]),a("h3",{attrs:{id:"统计每个老师教授课程的数量"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#统计每个老师教授课程的数量"}},[e._v("#")]),e._v(" 统计每个老师教授课程的数量")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("SELECT\nt.name as teacher_name,COUNT(c.teacher_id) as course_count\nFROM\ncourses c\nright join\nteachers t\non c.teacher_id = t.id\nGROUP BY t.id\norder by course_count desc,teacher_name asc\n")])])]),a("h3",{attrs:{id:"查询年龄不大于20岁的教师所教的课程名字"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#查询年龄不大于20岁的教师所教的课程名字"}},[e._v("#")]),e._v(" 查询年龄不大于20岁的教师所教的课程名字")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("SELECT\nc.name as course_name\nFROM\ncourses c\nINNER JOIN\nteachers t\nON c.teacher_id = t.id\nWHERE\nt.age <= 20 and age is not null\n\n\nselect name from courses where teacher_id in (select id from teachers where age <=20); \n")])])]),a("h3",{attrs:{id:"查询-u-字开头且学生总数在-2000-到-5000-之间的教师国籍和该国籍教师的学生总数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#查询-u-字开头且学生总数在-2000-到-5000-之间的教师国籍和该国籍教师的学生总数"}},[e._v("#")]),e._v(" 查询 'U' 字开头且学生总数在 2000 到 5000 之间的教师国籍和该国籍教师的学生总数")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("SELECT\nt.country,sum(c.student_count) student_count\nFROM\ncourses c \nright join \nteachers t \non c.teacher_id = t.id\nwhere t.country like 'U%'\ngroup by t.country\nhaving student_count between 2000 and 5000\norder by student_count desc,country asc\n")])])]),a("h3",{attrs:{id:"查询每位同学第一次登录平台听课的设备id"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#查询每位同学第一次登录平台听课的设备id"}},[e._v("#")]),e._v(" 查询每位同学第一次登录平台听课的设备ID")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("SELECT\nstudent_id,device_id\nFROM`\nonline_class_situations` s1\nWHERE   \ns1.date = (SELECT MIN(date) FROM online_class_situations s2 WHERE s1.student_id = s2.student_id and s2.course_number > 0)\n")])])]),a("h3",{attrs:{id:"连续的空箱子"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#连续的空箱子"}},[e._v("#")]),e._v(" 连续的空箱子")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("select id from boxes where id in (\n    select b1.id from boxes b1,boxes b2\n    where (b1.is_empty = 1 and b2.is_empty=1 and ( \n         b1.id + 1= b2.id or b2.id +1 = b1.id\n      )\n    ) \n) order by id\n")])])]),a("h3",{attrs:{id:"查询没有给阿里巴巴投简历的学生"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#查询没有给阿里巴巴投简历的学生"}},[e._v("#")]),e._v(" 查询没有给阿里巴巴投简历的学生")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("SELECT\ns.name as student_name\nfrom students \nwhere id not in (\nselect student_id from recording where company_id  = (select id from companies where name = 'Alibaba')\n)\n")])])]),a("h3",{attrs:{id:"找只出现过一次最高的身高"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#找只出现过一次最高的身高"}},[e._v("#")]),e._v(" 找只出现过一次最高的身高")]),e._v(" "),a("p",[e._v("在只出现过一次的身高中，找出最高的身高，如果找不到，请返回 null")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("SELECT\nifnull((SELECT\nheight\nFROM\nstudent_heights\ngroup by height\nhaving count(height)=1\norder by height desc \nlimit 1),null) as height\n")])])]),a("h3",{attrs:{id:"将教师表中所有的数据复制到另一张表中"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#将教师表中所有的数据复制到另一张表中"}},[e._v("#")]),e._v(" 将教师表中所有的数据复制到另一张表中")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("CREATE TABLE teacher_copy AS SELECT * FROM teachers;\n")])])]),a("h3",{attrs:{id:"修改教师western-venom创建的课程名称"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#修改教师western-venom创建的课程名称"}},[e._v("#")]),e._v(" 修改教师Western Venom创建的课程名称")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("UPDATE\ncourses c\nset c.name ='Java'\nwhere\nc.teacher_id in(\n    select id from teachers t where name = 'Western Venom' and c.teacher_id = t.id\n)\n")])])]),a("h3",{attrs:{id:"查询上课学生人数均超过-western-venom-老师所教课程的课程信息预"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#查询上课学生人数均超过-western-venom-老师所教课程的课程信息预"}},[e._v("#")]),e._v(" 查询上课学生人数均超过 Western Venom 老师所教课程的课程信息预")]),e._v(" "),a("p",[e._v("all 关键字： all 关键字用于比较一个值与子查询返回的所有值。在这个例子中，student_count > all(...) 确保了只有那些学生人数大于 Western Venom 所教授的所有课程学生人数的课程才被选中。")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(" SELECT * from courses where student_count >\n  all(SELECT student_count from courses where teacher_id =(SELECT id from teachers where name='Western Venom'))\n")])])]),a("h3",{attrs:{id:"查询学生上课人数超过-eastern-heretic-的任意一门授课人数的课程信息"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#查询学生上课人数超过-eastern-heretic-的任意一门授课人数的课程信息"}},[e._v("#")]),e._v(" 查询学生上课人数超过 'Eastern Heretic' 的任意一门授课人数的课程信息")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("SELECT\n*\nFROM\ncourses\nWHERE\nteacher_id !=(SELECT id from teachers where name ='Eastern Heretic') and\nstudent_count > ( SELECT min(student_count) from courses where teacher_id = (SELECT id from teachers where name = 'Eastern Heretic'))\n")])])]),a("h3",{attrs:{id:"查询不同国家最大年龄教师"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#查询不同国家最大年龄教师"}},[e._v("#")]),e._v(" 查询不同国家最大年龄教师")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("SELECT\nname ,age, country\nFROM\nteachers\nwhere  \n(country,age) in (SELECT country,max(age) from teachers group by country)\n")])])]),a("h3",{attrs:{id:"_2066-·-查询课程学生数超过最年长教师所有课程学生数的课程信息预发布"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2066-·-查询课程学生数超过最年长教师所有课程学生数的课程信息预发布"}},[e._v("#")]),e._v(" 2066 · 查询课程学生数超过最年长教师所有课程学生数的课程信息预发布")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("select * from courses where student_count >\n (select max(student_count) from courses where teacher_id in\n  (select id from teachers where age = (select max(age) from teachers)))\n")])])]),a("h3",{attrs:{id:"查询每个教师授课学生人数最高的课程名称和上课人数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#查询每个教师授课学生人数最高的课程名称和上课人数"}},[e._v("#")]),e._v(" 查询每个教师授课学生人数最高的课程名称和上课人数")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v(" SELECT\nname,student_count\nFROM\ncourses\nwhere \n(teacher_id,student_count) in (\n    SELECT teacher_id,max(student_count) from courses\n    group by teacher_id\n)\n")])])]),a("h3",{attrs:{id:"根据国家平均年龄查询教师信息"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#根据国家平均年龄查询教师信息"}},[e._v("#")]),e._v(" 根据国家平均年龄查询教师信息")]),e._v(" "),a("p",[e._v("把平均年龄大于总平均年龄的国家，把这个国家的所有教师信息查出来")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("SELECT\n*\nFROM\nteachers \nwhere country in\n(SELECT country FROM teachers\ngroup by country \nhaving avg(age) > (SELECT avg(age) FROM teachers))\n")])])]),a("h3",{attrs:{id:"统计每个老师教授课程的学生总数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#统计每个老师教授课程的学生总数"}},[e._v("#")]),e._v(" 统计每个老师教授课程的学生总数")]),e._v(" "),a("p",[e._v("如果没有学生参加课程，则学生总数为0")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("SELECT\nt.name as teacher_name, sum(CASE WHEN c.student_count IS NULL THEN 0 ELSE c.student_count END) as student_count\nFROM\nteachers t \nleft join \ncourses c \non c.teacher_id= t.id\ngroup by t.name\n")])])]),a("h3",{attrs:{id:"查询课程创建时间晚于指定教师任意一门课程创建时间的课程名称"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#查询课程创建时间晚于指定教师任意一门课程创建时间的课程名称"}},[e._v("#")]),e._v(" 查询课程创建时间晚于指定教师任意一门课程创建时间的课程名称")]),e._v(" "),a("p",[e._v("左边所有非指定教师课程的创建时间都比右边所有指定教师课程的创建时间晚")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("SELECT\nname\nFROM\ncourses\nWHERE\nteacher_id not in(select id from teachers where name = 'Southern Emperor')\nand\ncreated_at>\n(\nSELECT min(created_at) from courses where teacher_id = (SELECT min(id) from teachers where name = 'Southern Emperor')\n)\n")])])]),a("h3",{attrs:{id:"存储过程参数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#存储过程参数"}},[e._v("#")]),e._v(" 存储过程参数")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("create PROCEDURE getTeacherNumByCountry (IN teacherCountry VARCHAR(20),OUT total INT)\nBEGIN\n    SELECT count(1) into total from teachers \n    WHERE country = teacherCountry;\nEND    ;\ncall getTeacherNumByCountry('CN',@total);\nSELECT @total;\n")])])]),a("h3",{attrs:{id:"数据新增备份触发器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数据新增备份触发器"}},[e._v("#")]),e._v(" 数据新增备份触发器")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("create trigger backup_teachers before insert on teachers\nfor each row\nbegin\n\n")])])]),a("h3",{attrs:{id:"招聘信息统计表的更新数据处理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#招聘信息统计表的更新数据处理"}},[e._v("#")]),e._v(" 招聘信息统计表的更新数据处理")]),e._v(" "),a("p",[e._v("请编写 SQL 语句，实现简历投递数据表更新数据时的以下处理：")]),e._v(" "),a("p",[e._v("若更新数据中的 student_id 在 students 表中不存在或company_id 在 companies 表中不存在时，不允许更新该条数据。\n当 student_id 不存在时，则不更新该值\n当 company_id 不存在时，则不更新该值")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("create trigger update_recruits before update on recruits\nfor each row\nbegin\n    if not exists(select 1 from students where id = new.student_id) or not exists(select 1 from companies where id = new.company_id) then\n        signal sqlstate '45000' set message_text = 'Invalid student_id or company_id';\n    end if;\n    if not exists(select 1 from students where id = new.student_id) then\n        set new.student_id = old.student_id;\n    end if;\n    if not exists(select 1 from companies where id = new.company_id) then\n        set new.company_id = old.company_id;\n    end if;\nend;\n")])])])])}),[],!1,null,null,null);a.default=n.exports}}]);